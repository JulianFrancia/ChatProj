# Cambiar la ip del HOST por la correspondiente al servidor donde se est√© corriendo el docker container
# Cambiar la IP de la base de datos de mongo por la correspondiente
# Cambiar las credenciales para la base de datos de mongo correspondiente
# El puerto interno del contenedor debe ser igual al externo para evitar fallos por CORS en el Swagger

version: '3.5'

services:
  chat-proj-api:
    build: .
    container_name: chat-proj-api
    restart: always
#    network_mode: bridge
    ports:
      - 3006:3006
    volumes:
      - ./upload:/usr/src/app/upload
    environment:
      # - MONGO_URI=mongodb://admin:admin@mongodb/ChatProj
      - MONGO_URI=mongodb://34.69.232.230:27017,34.69.232.230:27018,34.69.232.230:27019/ChatProj?replicaSet=rs0
      - HOST=http://34.69.232.230
      - PORT=3006
      - JWT_KEY=lfjf

      - WEB_URL=http://www.example.com/

      - VIRTUAL_HOST=chat-projapi.com
      - VIRTUAL_PORT=80
      - DATABASE=chatProj
      - SYNCHRONIZE=false
      - NODE_ENV=development
      - CORS_URLS=http://localhost:4200
      - CORS_METHODS=OPTIONS,GET,HEAD,PUT,PATCH,POST,DELETE

      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_TLS=true
      - EMAIL_USER=chatprojdev@gmail.com
      - EMAIL_PASSWORD=ChatProjectD3v
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.3'
          memory: 500M
    

networks:
  default:
    external:
      name: chatproj

# networks:
#   chatproj:
#     driver: bridge
# networks:
#   mongo_db_default:
#     external: false
#     name: mongo_db_default
#   default:
#     external:
#       name: mongo_db_default
